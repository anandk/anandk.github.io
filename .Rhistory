install.packages(c("stringr","data.table","dplyr","plyr","reshape2","tidyr","lubridate","zoo","knitr","editR","googleVis","ggplot2","RColorBrewer","leaflet","shiny","foreach","devtools","Rcpp","jsonlite","parallel","roxygen2")
)
if (!forecast %in% installed.packages()) install.packages("forecast")
if (!"forecast" %in% installed.packages()) install.packages("forecast")
om
fy <- c(2010,2011,2012,2010,2011,2012,2010,2011,2012)
company <- c("Apple","Apple","Apple","Google","Google","Google","Microsoft","Microsoft","Microsoft")
revenue <- c(65225,108249,156508,29321,37905,50175,62484,69943,73723)
profit <- c(14013,25922,41733,8505,9737,10737,18760,23150,16978)
companiesData <- data.frame(fy, company, revenue, profit)
str(companiesData)
companiesData$fy <- factor(companiesData$fy, ordered = TRUE)
str(companiesData)
?unname
unname
unname(companiesData)
companiesData
library(data.table)
library(digest)
?digest::digest
data.table()
?data.table()
getcd()
getwd
getwd()
setwd("/Users/anand/Documents/Projects/RWorkspace")
setwd("/Users/anand/Documents/Projects/RWorkspace")
initialDataTable <- fread("FL_insurance_sample.csv")
head(initialDataTable)
setwd("~/Documents/Projects/RWorkspace")
colnames(initialDataTable)
summary(colnames(initialDataTable))
summary(colnames(initialDataTable))[1:3]
colnames(initialDataTable)[1:3]
colnames(companiesData)[1:3]
c(colnames(companiesData)[1:3])
c(1,2,3)
initialDataTable[, columnsToMask := lapply(.SD, maskingFunc),
.SDcols=columnsToMask, with=FALSE
]
columnsToMask = c("county","construction")
initialDataTable[, columnsToMask := lapply(.SD, maskingFunc),
.SDcols=columnsToMask, with=FALSE
]
maskingFunc <- function(dt, algo="sha1"){
hashes <- vapply(unique(dt), #Get unique values
function(val) digest(val,algo), FUN.VALUE = "",USE.NAMES = TRUE)
unname(hashes[dt])
}
initialDataTable[, columnsToMask := lapply(.SD, maskingFunc),
.SDcols=columnsToMask, with=FALSE
]
head(initialDataTable)
initialDataTable <- fread("FL_insurance_sample.csv")
head(initialDataTable)
initialDataTable[, columnsToMask := lapply(.SD, maskingFunc),
.SDcols=columnsToMask, with=FALSE
][]
fwrite
columnsToMask = c("county","construction")
#Run the masking routine
maskedDT <- initialDataTable[, columnsToMask := lapply(.SD, maskingFunc),
.SDcols=columnsToMask, with=FALSE
][]
write.csv(maskedDT, file = "MaskedVolumesData.csv", row.names = FALSE)
View(maskedDT)
View(maskedDT)
library(data.table)
library(digest)
#Load dataset into a data table. Please enter file name within quotes below
unmaskedDT <- fread("FL_insurance_sample.csv")
#masking function defined
maskingFunc <- function(dt, algo="sha1"){
hashes <- vapply(unique(dt), #Get unique values
function(val) digest(val,algo), FUN.VALUE = "",USE.NAMES = TRUE)
unname(hashes[dt])
}
#Pick the columns to mask. First 11 columns? Ok!
#columnsToMask <- c(colnames(unmaskedDT)[1:11])
columnsToMask = c("county","construction")
#Run the masking routine
maskedDT <- initialDataTable[, columnsToMask := lapply(.SD, maskingFunc),
.SDcols=columnsToMask, with=FALSE
][]
write.csv(maskedDT, file = "MaskedVolumesData.csv", row.names = FALSE)
df <- read.csv("../Volume_MASK.csv")
unique(df)
df[1:4]
unique(df[1..4])
unique(df[1...4])
unique(df[1:4])
count(unique(df[1:4]))
length(unique(df[1:4]))
size(unique(df[1:4]))
nrow(unique(df[1:4]))
nrow(df)
unique(df[1])
